#defines {
	pythia_version = 8.1.86,
	ptyhia_package_version = 8.186.6,
	d_pythia = ..\Pythia\Pythia8186,
}

nuget {
    nuspec {
        id = Pythia8;
        version = ${ptyhia_package_version};
        title = Pythia8;
        authors = {T. Sjostrand, J. Christiansen, N. Desai, P. Ilten, S. Mrenna, S. Prestel, C. Rasmussen, P. Skands};
        owners = {G. Watts};
        licenseUrl: "http://www.gnu.org/licenses/gpl-2.0.html";
        projectUrl: "https://github.com/gordonwatts/PythiaPackaging/";
        iconUrl: "http://home.thep.lu.se/~torbjorn/pythiaaux/pythia.gif";
        requireLicenseAcceptance: false;
        summary: Pythia ${pythia_version} C++ MC generator;
        description: "Contains static libraries and config files for Pythia8 VS2012 and VS2013 versions. PYTHIA8DATA is defined when you build, but you must open and close the solution the first time for the IDE to pick it up";
        releaseNotes: "Release ${pythia_version} of Pythia, now writes PYTHIA8Data into debug environment settings.";
        tags: data particle physics "Monte Carlo" MC;
    };
	
	customtasks {
		task {
			name = AddDebugEnv;
			DLL = ..\ROOTPackageBuilders\ROOTMSBuildTasks\bin\Release\ROOTMSBuildTasks.dll;
		};
	};
	taskdecl {
			Name = AddDebugEnv;
			DLL = ..\ROOTPackageBuilders\ROOTMSBuildTasks\bin\Release\ROOTMSBuildTasks.dll;
	};

    files {
		// We will need to move some content over to the proper app directory.
	    data += {
            #add-all-files : Items.MyDataFiles;
            #destination : ${build_root}\MyData;
        };

		// Specify the files we want to carry along.
		
        include: { "${d_pythia}\include\**\*"};
		data: { "${d_pythia}\xmldoc\**\*" };

		[x86,dynamic,v120,debug]
		{
            lib: { "${d_pythia}\Debug-v120\*.lib" };
            symbols: { "${d_pythia}\Debug-v120\*.pdb" };
			
		}
		[x86,dynamic,v120,release]
		{
            lib: { "${d_pythia}\Release-v120\*.lib" };
            symbols: { "${d_pythia}\Release-v120\*.pdb" };
		}
		[x86,dynamic,v110,debug]
		{
            lib: { "${d_pythia}\Debug-v110\*.lib" };
            symbols: { "${d_pythia}\Debug-v110\*.pdb" };
		}
		[x86,dynamic,v110,release]
		{
            lib: { "${d_pythia}\Release-v110\*.lib" };
            symbols: { "${d_pythia}\Release-v110\*.pdb" };
		}
    }
	
	// Some of our file-s need special placement after the build. This is where we add targets to take care of that.
	// This should happen after the build completes (target is AfterBuild).

	targets {
		AfterBuild {
			.Copy {
				SourceFiles= "@(MyDataFiles)";
				DestinationFiles = "@(MyDataFiles->'$(TargetDir)Pythia8Data\%(RecursiveDir)%(Filename)%(Extension)')";
				SkipUnchangedFiles = true;
				UseHardlinksIfPossible = true;
			};
			.AddDebugEnv {
				EnvVarName = "PYTHIA8Data";
				EnvValue = "$(SolutionDir)\$(Configuration)\Pythia8Data" ;
				UserSettingsPath = "$(ProjectPath).user";
				ConfigPlatform = "$(Configuration)|$(Platform)";
			};
		}
	}		
}
